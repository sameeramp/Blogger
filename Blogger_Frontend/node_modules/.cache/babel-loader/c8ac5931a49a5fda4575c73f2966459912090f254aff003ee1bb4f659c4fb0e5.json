{"ast":null,"code":"var _s = $RefreshSig$();\nimport React from 'react';\nimport { useReducer, useState, useEffect } from \"react\";\nimport { Alert, ErrorMsg, Footer, Heading2, InputField, Label, Navbar, SubmitButton } from \"../shared/components\";\nimport { CONTACT_FORM, EMAIL_INPUT_NAME, EMAIL_PLACEHOLDER, USERNAME_INPUT_NAME, USERNAME_PLACEHOLDER, PHONE_INPUT_NAME, PHONE_PLACEHOLDER, CONTACT_MSG, BUTTON_NAME, FIELD_NULL_ERROR, CONTACT_URL, CONTACT_US, BACKEND_BASE_URL } from \"../constants\";\nimport { apiHandler, changeToSmallCase, formReducer, trimElement } from \"../shared/utils\";\nimport \"./Component.css\";\nimport { setOption } from \"../../features/navbar/navbarSlice\";\nimport { useDispatch } from \"react-redux\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialData = {\n  username: \"\",\n  email: \"\",\n  phoneNum: \"\",\n  message: \"\"\n};\nexport const Contact = () => {\n  _s();\n  const [formData, dispatch] = useReducer(formReducer, initialData);\n  const [error, setError] = useState(\"\");\n  const [alert, setAlert] = useState(false);\n  const dispatchRedux = useDispatch();\n  const mail = changeToSmallCase(EMAIL_INPUT_NAME);\n  const username = changeToSmallCase(USERNAME_INPUT_NAME);\n  const contactMsg = changeToSmallCase(CONTACT_MSG);\n  const btn = changeToSmallCase(BUTTON_NAME);\n  const handleInputChange = event => {\n    dispatch({\n      type: \"SET_FIELD_VALUE\",\n      fieldName: event.target.name,\n      fieldValue: event.target.value\n    });\n  };\n  const handleClick = async event => {\n    event.preventDefault();\n    const isMailContent = trimElement(formData.email);\n    const isUsername = trimElement(formData.username);\n    const isMessage = trimElement(formData.message);\n    const isMobile = trimElement(formData.phoneNum);\n    if (!isMailContent || !isUsername || !isMessage || !isMobile) {\n      setError(FIELD_NULL_ERROR);\n    } else {\n      const response = await apiHandler(formData, \"\", \"CONTACT\", BACKEND_BASE_URL, CONTACT_URL, CONTACT_US);\n      if (response || response.data) {\n        setAlert(true);\n        dispatch({\n          type: \"RESET_FORM\"\n        });\n      }\n    }\n  };\n  useEffect(() => {\n    dispatchRedux(setOption(\"CONTACT\"));\n    const timer1 = setTimeout(() => {\n      setError(\"\");\n    }, 3000);\n    const timer2 = setTimeout(() => {\n      setAlert(false);\n    }, 3000);\n    return () => {\n      clearTimeout(timer1);\n      clearTimeout(timer2);\n    };\n  }, [error, alert]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n  // <>\n  //   <Navbar />\n  //   <div className=\"outer-box-contact\">\n  //     <Heading2 heading={CONTACT_FORM} />\n  //     <form className=\"container\">\n  //       <Label htmlFor=\"username\" label={USERNAME_INPUT_NAME} />\n  //       <InputField\n  //         value={formData.username}\n  //         focus={false}\n  //         onChange={handleInputChange}\n  //         type=\"text\"\n  //         id={username}\n  //         name={username}\n  //         placeholder={USERNAME_PLACEHOLDER}\n  //       />\n\n  //       <Label htmlFor={mail} label={EMAIL_INPUT_NAME} />\n  //       <InputField\n  //         value={formData.email}\n  //         onChange={handleInputChange}\n  //         type={mail}\n  //         id={mail}\n  //         name={mail}\n  //         placeholder={EMAIL_PLACEHOLDER}\n  //       />\n\n  //       <Label htmlFor=\"phone_num\" label={PHONE_INPUT_NAME} />\n  //       <InputField\n  //         value={formData.phoneNum}\n  //         onChange={handleInputChange}\n  //         type=\"number\"\n  //         id=\"phone_num\"\n  //         name=\"phoneNum\"\n  //         placeholder={PHONE_PLACEHOLDER}\n  //       />\n\n  //       <Label htmlFor={contactMsg} label={CONTACT_MSG} />\n  //       <div>\n  //         <textarea\n  //           id=\"message\"\n  //           name=\"message\"\n  //           className=\"textareaStyle\"\n  //           value={formData.message}\n  //           onChange={handleInputChange}\n  //         ></textarea>\n  //       </div>\n\n  //       {error && <ErrorMsg msg={error} />}\n  //       {alert && <Alert msg=\"Your Response Saved Successfully\" />}\n\n  //       <SubmitButton onClick={handleClick} type={btn} name={BUTTON_NAME} />\n  //     </form>\n  //   </div>\n  //   <Footer />\n  // </>\n  ;\n};\n_s(Contact, \"EGtOVn9Y4XenGvrjdwwAkaBfZdo=\", false, function () {\n  return [useDispatch];\n});\n_c = Contact;\nvar _c;\n$RefreshReg$(_c, \"Contact\");","map":{"version":3,"names":["React","useReducer","useState","useEffect","Alert","ErrorMsg","Footer","Heading2","InputField","Label","Navbar","SubmitButton","CONTACT_FORM","EMAIL_INPUT_NAME","EMAIL_PLACEHOLDER","USERNAME_INPUT_NAME","USERNAME_PLACEHOLDER","PHONE_INPUT_NAME","PHONE_PLACEHOLDER","CONTACT_MSG","BUTTON_NAME","FIELD_NULL_ERROR","CONTACT_URL","CONTACT_US","BACKEND_BASE_URL","apiHandler","changeToSmallCase","formReducer","trimElement","setOption","useDispatch","Fragment","_Fragment","jsxDEV","_jsxDEV","initialData","username","email","phoneNum","message","Contact","_s","formData","dispatch","error","setError","alert","setAlert","dispatchRedux","mail","contactMsg","btn","handleInputChange","event","type","fieldName","target","name","fieldValue","value","handleClick","preventDefault","isMailContent","isUsername","isMessage","isMobile","response","data","timer1","setTimeout","timer2","clearTimeout","_c","$RefreshReg$"],"sources":["/home/sameeramp/Desktop/Blogger/Blogger_Frontend/src/components/contact/Component.jsx"],"sourcesContent":["import React from 'react';\nimport { useReducer, useState, useEffect } from \"react\";\nimport {\n  Alert,\n  ErrorMsg,\n  Footer,\n  Heading2,\n  InputField,\n  Label,\n  Navbar,\n  SubmitButton,\n} from \"../shared/components\";\nimport {\n  CONTACT_FORM,\n  EMAIL_INPUT_NAME,\n  EMAIL_PLACEHOLDER,\n  USERNAME_INPUT_NAME,\n  USERNAME_PLACEHOLDER,\n  PHONE_INPUT_NAME,\n  PHONE_PLACEHOLDER,\n  CONTACT_MSG,\n  BUTTON_NAME,\n  FIELD_NULL_ERROR,\n  CONTACT_URL,\n  CONTACT_US,\n  BACKEND_BASE_URL,\n} from \"../constants\";\nimport {\n  apiHandler,\n  changeToSmallCase,\n  formReducer,\n  trimElement,\n} from \"../shared/utils\";\nimport \"./Component.css\";\nimport { setOption } from \"../../features/navbar/navbarSlice\";\nimport { useDispatch } from \"react-redux\";\n\nconst initialData = {\n  username: \"\",\n  email: \"\",\n  phoneNum: \"\",\n  message: \"\",\n};\n\nexport const Contact = () => {\n  const [formData, dispatch] = useReducer(formReducer, initialData);\n  const [error, setError] = useState(\"\");\n  const [alert, setAlert] = useState(false);\n  const dispatchRedux = useDispatch();\n\n  const mail = changeToSmallCase(EMAIL_INPUT_NAME);\n  const username = changeToSmallCase(USERNAME_INPUT_NAME);\n  const contactMsg = changeToSmallCase(CONTACT_MSG);\n  const btn = changeToSmallCase(BUTTON_NAME);\n\n  const handleInputChange = (event) => {\n    dispatch({\n      type: \"SET_FIELD_VALUE\",\n      fieldName: event.target.name,\n      fieldValue: event.target.value,\n    });\n  };\n\n  const handleClick = async (event) => {\n    event.preventDefault();\n    const isMailContent = trimElement(formData.email);\n    const isUsername = trimElement(formData.username);\n    const isMessage = trimElement(formData.message);\n    const isMobile = trimElement(formData.phoneNum);\n    if (!isMailContent || !isUsername || !isMessage || !isMobile) {\n      setError(FIELD_NULL_ERROR);\n    } else {\n      const response = await apiHandler(\n        formData,\n        \"\",\n        \"CONTACT\",\n        BACKEND_BASE_URL,\n        CONTACT_URL,\n        CONTACT_US\n      );\n      if (response || response.data) {\n        setAlert(true);\n        dispatch({\n          type: \"RESET_FORM\",\n        });\n      }\n    }\n  };\n\n  useEffect(() => {\n    dispatchRedux(setOption(\"CONTACT\"));\n    const timer1 = setTimeout(() => {\n      setError(\"\");\n    }, 3000);\n    const timer2 = setTimeout(() => {\n      setAlert(false);\n    }, 3000);\n\n    return () => {\n      clearTimeout(timer1);\n      clearTimeout(timer2);\n    };\n  }, [error, alert]);\n\n  return (<></>\n    // <>\n    //   <Navbar />\n    //   <div className=\"outer-box-contact\">\n    //     <Heading2 heading={CONTACT_FORM} />\n    //     <form className=\"container\">\n    //       <Label htmlFor=\"username\" label={USERNAME_INPUT_NAME} />\n    //       <InputField\n    //         value={formData.username}\n    //         focus={false}\n    //         onChange={handleInputChange}\n    //         type=\"text\"\n    //         id={username}\n    //         name={username}\n    //         placeholder={USERNAME_PLACEHOLDER}\n    //       />\n\n    //       <Label htmlFor={mail} label={EMAIL_INPUT_NAME} />\n    //       <InputField\n    //         value={formData.email}\n    //         onChange={handleInputChange}\n    //         type={mail}\n    //         id={mail}\n    //         name={mail}\n    //         placeholder={EMAIL_PLACEHOLDER}\n    //       />\n\n    //       <Label htmlFor=\"phone_num\" label={PHONE_INPUT_NAME} />\n    //       <InputField\n    //         value={formData.phoneNum}\n    //         onChange={handleInputChange}\n    //         type=\"number\"\n    //         id=\"phone_num\"\n    //         name=\"phoneNum\"\n    //         placeholder={PHONE_PLACEHOLDER}\n    //       />\n\n    //       <Label htmlFor={contactMsg} label={CONTACT_MSG} />\n    //       <div>\n    //         <textarea\n    //           id=\"message\"\n    //           name=\"message\"\n    //           className=\"textareaStyle\"\n    //           value={formData.message}\n    //           onChange={handleInputChange}\n    //         ></textarea>\n    //       </div>\n\n    //       {error && <ErrorMsg msg={error} />}\n    //       {alert && <Alert msg=\"Your Response Saved Successfully\" />}\n\n    //       <SubmitButton onClick={handleClick} type={btn} name={BUTTON_NAME} />\n    //     </form>\n    //   </div>\n    //   <Footer />\n    // </>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}